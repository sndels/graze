#ifndef GRAZE_GUI_HU
#define GRAZE_GUI_HU

#include <GLFW/glfw3.h>

#include "vec.hu"

struct FilmSettings
{
    // Dimensions need to be back-to-back as they are written to as uint32_t[2]
    uint32_t width = 1280;
    uint32_t height = 720;
    uint32_t samples = 100;
};

struct CameraSettings
{
    Vec3 eye = Vec3{13.f, 2.f, 3.f};
    Vec3 target = Vec3{0.f};
    float fov = 20.f;
    float aperture = 0.2f;
    float focalLength = len(Vec3{13.f, 2.f, 3.f} - Vec3{0.f});
};

class GUI
{
public:
    GUI(GLFWwindow* window);
    // Needs to happen before window is destroyed
    void destroy();

    const FilmSettings& filmSettings() const;
    const CameraSettings& cameraSettings() const;
    bool startRender() const;

    void startFrame();
    void endFrame();

private:
    FilmSettings _filmSettings;
    CameraSettings _cameraSettings;
    bool _startRender = false;
};

#endif // GRAZE_GUI_HU
